<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>leetcode算法初级刷题记录</title>
    <link href="/2021/03/20/leetcode%E7%AE%97%E6%B3%95%E5%88%9D%E7%BA%A7%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
    <url>/2021/03/20/leetcode%E7%AE%97%E6%B3%95%E5%88%9D%E7%BA%A7%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h1 id="算法初级（更新ing）"><a href="#算法初级（更新ing）" class="headerlink" title="算法初级（更新ing）"></a>算法初级（更新ing）</h1><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><h3 id="01删除排序数组中的重复项"><a href="#01删除排序数组中的重复项" class="headerlink" title="01删除排序数组中的重复项"></a>01删除排序数组中的重复项</h3><blockquote><p>给定一个排序数组，你需要在 原地 删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。不要使用额外的数组空间，你必须在原地修改输入数组，并在使用 O(1) 额外空间的条件下完成。</p></blockquote><h4 id="个人思路"><a href="#个人思路" class="headerlink" title="个人思路"></a>个人思路</h4><blockquote><p>cout的数目和索引为count的数组值都是不同的，因此只要遍历一次数组，遇到不同的赋值给nums[count]就行了，同时count增加1</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">removeDuplicates</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (nums.length == <span class="hljs-number">0</span>) &#123;<br>            <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">int</span> count = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">int</span> temp = nums[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">1</span>; i &lt;nums.length ; i++) &#123;<br>            <span class="hljs-keyword">if</span>(nums[i] == temp) &#123;<br>                <span class="hljs-keyword">continue</span>;<br>            &#125; <span class="hljs-keyword">else</span> &#123;<br>                temp = nums[i];<br>                nums[count] = temp;<br>                count ++ ;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> count;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="官方解答"><a href="#官方解答" class="headerlink" title="官方解答"></a>官方解答</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">removeDuplicates</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums)</span> </span>&#123;<br>    <span class="hljs-keyword">if</span> (nums.length == <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> j = <span class="hljs-number">1</span>; j &lt; nums.length; j++) &#123;<br>        <span class="hljs-keyword">if</span> (nums[j] != nums[i]) &#123;<br>            i++;<br>            nums[i] = nums[j];<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> i + <span class="hljs-number">1</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h3 id="02买卖股票的最佳时机-II"><a href="#02买卖股票的最佳时机-II" class="headerlink" title="02买卖股票的最佳时机 II"></a>02买卖股票的最佳时机 II</h3><blockquote><p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。</p><p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p></blockquote><h4 id="贪心思想"><a href="#贪心思想" class="headerlink" title="贪心思想"></a>贪心思想</h4><p>只要第二天的价格比前一天高，就对买入卖出。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">int</span> <span class="hljs-title">maxProfit</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] prices)</span> </span>&#123;<br>        <span class="hljs-keyword">if</span> (prices.length == <span class="hljs-number">0</span>)&#123;<br>            <span class="hljs-keyword">return</span>  <span class="hljs-number">0</span>;<br>        &#125;<br>        <span class="hljs-keyword">int</span> profit = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; prices.length-<span class="hljs-number">1</span>; i++) &#123;<br>            <span class="hljs-keyword">int</span> dirr = prices[i+<span class="hljs-number">1</span>] - prices[i];<br>            <span class="hljs-keyword">if</span> (dirr &gt; <span class="hljs-number">0</span>)&#123;<br>                profit += dirr;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> profit;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="动态规划"><a href="#动态规划" class="headerlink" title="动态规划"></a>动态规划</h4><p>待补充</p><h3 id="03旋转数组"><a href="#03旋转数组" class="headerlink" title="03旋转数组"></a>03旋转数组</h3><blockquote><p>给定一个数组，将数组中的元素向右移动 k个位置，其中k 是非负数。</p></blockquote><h4 id="个人思路-1"><a href="#个人思路-1" class="headerlink" title="个人思路"></a>个人思路</h4><blockquote><p>构建一个新数组，原数组第0个元素，赋值给新数组中索引为k%数组长度的位置。接下来按照顺序赋值就行</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rotate</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> length = nums.length;<br>        <span class="hljs-keyword">int</span>[] resNums = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[length];<br>        <span class="hljs-keyword">int</span> absRemove = k%length;<br><br>        resNums[absRemove] = nums[<span class="hljs-number">0</span>];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = absRemove; i &lt;length ; i++) &#123;<br>            resNums[i] = nums[i-absRemove];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; absRemove; i++) &#123;<br>            resNums[i] = nums[length-absRemove+i];<br>        &#125;<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; length ; i++) &#123;<br>            nums[i] = resNums[i];<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="官方解答-1"><a href="#官方解答-1" class="headerlink" title="官方解答"></a>官方解答</h4><ul><li><p>方法一：创建新数组<br>同个人思路，但人家更加简便</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rotate</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> n = nums.length;<br>        <span class="hljs-keyword">int</span>[] newArr = <span class="hljs-keyword">new</span> <span class="hljs-keyword">int</span>[n];<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> i = <span class="hljs-number">0</span>; i &lt; n; ++i) &#123;<br>            newArr[(i + k) % n] = nums[i];<br>        &#125;<br>        System.arraycopy(newArr, <span class="hljs-number">0</span>, nums, <span class="hljs-number">0</span>, n);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li><p>方法二：</p></li><li><p>方法三：数组翻转</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Solution</span> </span>&#123;<br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">rotate</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> k)</span> </span>&#123;<br>        k %= nums.length;<br>        reverse(nums, <span class="hljs-number">0</span>, nums.length - <span class="hljs-number">1</span>);<br>        reverse(nums, <span class="hljs-number">0</span>, k - <span class="hljs-number">1</span>);<br>        reverse(nums, k, nums.length - <span class="hljs-number">1</span>);<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title">reverse</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] nums, <span class="hljs-keyword">int</span> start, <span class="hljs-keyword">int</span> end)</span> </span>&#123;<br>        <span class="hljs-keyword">while</span> (start &lt; end) &#123;<br>            <span class="hljs-keyword">int</span> temp = nums[start];<br>            nums[start] = nums[end];<br>            nums[end] = temp;<br>            start += <span class="hljs-number">1</span>;<br>            end -= <span class="hljs-number">1</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>leetcode</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>yolo V1 损失函数的理解</title>
    <link href="/2021/03/20/yolo-V1-%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/"/>
    <url>/2021/03/20/yolo-V1-%E6%8D%9F%E5%A4%B1%E5%87%BD%E6%95%B0%E7%9A%84%E7%90%86%E8%A7%A3/</url>
    
    <content type="html"><![CDATA[<h2 id="YOLO-V1"><a href="#YOLO-V1" class="headerlink" title="YOLO V1"></a>YOLO V1</h2><h3 id="损失函数的理解"><a href="#损失函数的理解" class="headerlink" title="损失函数的理解"></a>损失函数的理解</h3><p><img src="/img/article/yolo_lossfun.png" alt="yolo_loss_fun"></p><ol><li>每一项说明<ul><li>第一项：遍历每个网格（Grid）中的每一个边界框（Bounding BOX，BBOX），其中网格有$S^2$个，预测框有B个。</li><li>$\mathbb{I}^{obj}_{ij}$ 表示若第i个网格中第j个边界框含有对象（OBJ）则该值为1 ，否则为0。</li><li>$[(x_i-\bar{x}_i)^2+(y_i-\bar{y}_i)^2]$表示中心坐标的平方差损失。</li><li>第二项：用开方的原因是对于大物体和小物体来说，在相同的IOU情况下，不至于相差太大。</li><li>第三项和第四项都是分别是对含有OBJ和不含有OBJ的BBOX的置信度（confidence）的预测 </li><li>第四项：$\mathbb{I}^{obj}_{i}$表示判断是都有OBJ落在网格i中。进行类别预测。</li></ul></li><li>超参数说明<ul><li>$\lambda_{coord}$表示需要BBOX负责预测OBJ的超参数，数目较多，设置5</li><li>$\lambda_{noobj}$表示不负责预测OBJ的BBOX的超参数，数目较少，设置0.5</li><li>用来抵输入的样本的不平衡</li></ul></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>目标检测</tag>
      
      <tag>YOLO</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用dpkg安装teamviewer后无法打开解决方法</title>
    <link href="/2021/03/20/%E4%BD%BF%E7%94%A8dpkg%E5%AE%89%E8%A3%85teamviewer%E5%90%8E%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <url>/2021/03/20/%E4%BD%BF%E7%94%A8dpkg%E5%AE%89%E8%A3%85teamviewer%E5%90%8E%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<ul><li><p>dpkg安装teamviewer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">dkpg -i teamviewer_15.2.2756_amd64.deb<br></code></pre></td></tr></table></figure></li><li><p>会遇到打不开的情况，详细观察会发现在安装时就告诉缺少相关依赖</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install -f<br></code></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Teamviewer</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>使用apt安装Nvidia驱动</title>
    <link href="/2021/03/17/%E4%BD%BF%E7%94%A8apt%E5%AE%89%E8%A3%85Nvidia%E9%A9%B1%E5%8A%A8/"/>
    <url>/2021/03/17/%E4%BD%BF%E7%94%A8apt%E5%AE%89%E8%A3%85Nvidia%E9%A9%B1%E5%8A%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="命令行安装驱动"><a href="#命令行安装驱动" class="headerlink" title="命令行安装驱动"></a>命令行安装驱动</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 查看显卡信息</span><br>ubuntu-drivers devices<br><span class="hljs-comment"># 安装驱动</span><br>sudo ubuntu-drivers autoinstall <span class="hljs-comment"># 自动</span><br>sudo apt install nvidia-340 <span class="hljs-comment"># 根据信息指定版本</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>一些小tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>clone github使用国内镜像加速</title>
    <link href="/2021/03/17/clone-github%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/"/>
    <url>/2021/03/17/clone-github%E4%BD%BF%E7%94%A8%E5%9B%BD%E5%86%85%E9%95%9C%E5%83%8F%E5%8A%A0%E9%80%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="GitHub-clone加速啊"><a href="#GitHub-clone加速啊" class="headerlink" title="GitHub clone加速啊"></a>GitHub clone加速啊</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 这是我们要clone的</span><br>git <span class="hljs-built_in">clone</span> https://github.com/Hackergeek/architecture-samples<br><span class="hljs-comment"># 使用镜像</span><br>git <span class="hljs-built_in">clone</span> https://github.com.cnpmjs.org/open-mmlab/mmdetection.git<br>git <span class="hljs-built_in">clone</span> https://github.com.cnpmjs.org/Hackergeek/architecture-sample<br><span class="hljs-comment"># 或者 使用镜像</span><br>git <span class="hljs-built_in">clone</span> https://git.sdut.me/Hackergeek/architecture-samples<br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>一些小tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cuda多版本的切换</title>
    <link href="/2021/03/17/cuda%E5%A4%9A%E7%89%88%E6%9C%AC%E7%9A%84%E5%88%87%E6%8D%A2/"/>
    <url>/2021/03/17/cuda%E5%A4%9A%E7%89%88%E6%9C%AC%E7%9A%84%E5%88%87%E6%8D%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="cuda版本切换"><a href="#cuda版本切换" class="headerlink" title="cuda版本切换"></a>cuda版本切换</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">sudo rm -rf <span class="hljs-regexp">/usr/</span>local/cuda  <span class="hljs-comment">#删除之前生成的软链接</span><br>sudo ln -s <span class="hljs-regexp">/usr/</span>local<span class="hljs-regexp">/cuda-10.0 /u</span>sr<span class="hljs-regexp">/local/</span>cuda <span class="hljs-comment">#生成新的软链接</span><br>nvcc -V <span class="hljs-comment">#查看当前cuda版本</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>一些小tips</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LXD容器配置和使用</title>
    <link href="/2021/03/17/LXD%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/03/17/LXD%E5%AE%B9%E5%99%A8%E9%85%8D%E7%BD%AE%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="reference"><a href="#reference" class="headerlink" title="reference:"></a>reference:</h2><ul><li><a href="https://github.com/shenuiuin/LXD_GPU_SERVER/blob/master/README.md">实验室GPU服务器的LXD虚拟化</a></li><li><a href="https://xungejiang.com/2019/05/31/lxd-setting/">使用 LXD 搭建多人使用的 GPU 服务器</a></li><li><a href="http://www.voidcn.com/article/p-pqkfttud-bmu.html">LXD 2.15 中的存储管理</a></li><li><a href="https://my.oschina.net/u/2306127/blog/2250662">Ubuntu上使用ZFS（Zettabyte File System）</a></li><li><a href="http://172.18.0.30:8888/">华元主页</a></li></ul><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="1-lxd的安装与初始化"><a href="#1-lxd的安装与初始化" class="headerlink" title="1. lxd的安装与初始化"></a>1. lxd的安装与初始化</h3><ul><li><h3 id="安装lxd"><a href="#安装lxd" class="headerlink" title="安装lxd"></a>安装lxd</h3><ul><li><p>说明</p><ul><li>LXD 实现虚拟容器</li><li>ZFS 用于管理物理磁盘，支持LXD高级功能</li><li>bridge-utils 用于搭建网桥</li></ul></li><li><p>安装LXD、ZFS和bridge-utils</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo apt-get install lxd zfsutils-linux bridge-utils<br></code></pre></td></tr></table></figure></li><li><p>配置zfs</p><ol><li><p>首先，我们运行sudo fdisk -l列出服务器上的可用磁盘和分区，将列表中还有最大存储/dev/nvme0n1p5分出需要使用的空间，作为容器的存储卷</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 使用dd命令在home目录下创建400G大小的存储池</span><br>sudo dd <span class="hljs-keyword">if</span>=/dev/nvme0n1p8 of=~/lxdImg.img bs=1M count=409600<br><span class="hljs-comment"># 创建存储池</span><br>sudo zpool create lxd-pool  ~/lxdImg.img<br><span class="hljs-comment"># 查看存储池</span><br>sudo zpool status<br> pool: lxd-pool<br> state: ONLINE<br>  scan: none requested<br>config:<br><br>NAME                     STATE     READ WRITE CKSUM<br>lxd-pool                 ONLINE       0     0     0<br>  /home/hycx/lxdImg.img  ONLINE       0     0     0<br><br></code></pre></td></tr></table></figure></li><li><p>创建存储池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 配置lxd存储池为该存储池</span><br>sudo lxc storage create zfs-pool zfs <span class="hljs-built_in">source</span>=lxd-pool<br></code></pre></td></tr></table></figure></li><li><p>查看lxd存储池</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc storage list<br>+----------+-------------+--------+----------+---------+<br>|   NAME   | DESCRIPTION | DRIVER |  SOURCE  | USED BY |<br>+----------+-------------+--------+----------+---------+<br>| zfs-pool |             | zfs    | lxd-pool | 0       |<br>+----------+-------------+--------+----------+---------+ <br></code></pre></td></tr></table></figure></li><li><p>lxd初始化</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># lxd 初始化</span><br>sudo lxd init<br><br>Would you like to use LXD clustering? (yes/no) [default=no]:<br>Do you want to configure a new storage pool? (yes/no) [default=yes]: no<br>Would you like to connect to a MAAS server? (yes/no) [default=no]:<br>Would you like to create a new <span class="hljs-built_in">local</span> network bridge? (yes/no) [default=yes]:<br>What should the new bridge be called? [default=lxdbr0]:<br>What IPv4 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]:<br>What IPv6 address should be used? (CIDR subnet notation, “auto” or “none”) [default=auto]:<br>Would you like LXD to be available over the network? (yes/no) [default=no]:<br>Would you like stale cached images to be updated automatically? (yes/no) [default=yes]<br>Would you like a YAML <span class="hljs-string">&quot;lxd init&quot;</span> preseed to be printed? (yes/no) [default=no]:<br><span class="hljs-comment"># lxd 默认配置</span><br>sudo lxc profile edit default<br><br>  GNU nano 2.9.3                                        /tmp/lxd_editor_658170891.yaml<br><br><span class="hljs-comment">### This is a yaml representation of the profile.</span><br><span class="hljs-comment">### Any line starting with a &#x27;# will be ignored.</span><br><span class="hljs-comment">###</span><br><span class="hljs-comment">### A profile consists of a set of configuration items followed by a set of</span><br><span class="hljs-comment">### devices.</span><br><span class="hljs-comment">###</span><br><span class="hljs-comment">### An example would look like:</span><br><span class="hljs-comment">### name: onenic</span><br><span class="hljs-comment">### config:</span><br><span class="hljs-comment">###   raw.lxc: lxc.aa_profile=unconfined</span><br><span class="hljs-comment">### devices:</span><br><span class="hljs-comment">###   eth0:</span><br><span class="hljs-comment">###     nictype: bridged</span><br><span class="hljs-comment">###     parent: lxdbr0</span><br><span class="hljs-comment">###     type: nic</span><br><span class="hljs-comment">###</span><br><span class="hljs-comment">### Note that the name is shown but cannot be changed</span><br><br>config: &#123;&#125;<br>description: Default LXD profile<br>devices:<br>  eth0:<br>    name: eth0<br>    nictype: bridged<br>    parent: lxdbr0<br>    <span class="hljs-built_in">type</span>: nic<br>  root:<br>    path: /<br>    pool: zfs-pool<br>    size: 400GB<br>    <span class="hljs-built_in">type</span>: disk<br>name: default<br>used_by: []<br></code></pre></td></tr></table></figure></li></ol></li></ul></li></ul><h3 id="2-建立容器"><a href="#2-建立容器" class="headerlink" title="2. 建立容器"></a>2. 建立容器</h3><ul><li><p>新建容器</p><ul><li><p>使用清华的镜像源（加速创建）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc remote add tuna-images https://mirrors.tuna.tsinghua.edu.cn/lxc-images/ --protocol=simplestreams --public<br></code></pre></td></tr></table></figure></li><li><p>列出可用镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc image list tuna-images:<br></code></pre></td></tr></table></figure></li><li><p>创建容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 选择ubuntu 18.04版本，版本名是Bionic Beaver，FINGERPRINT为4da26fe8e234</span><br>sudo lxc launch tuna-images:4da26fe8e234 containerOri<br></code></pre></td></tr></table></figure></li><li><p>进入容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc <span class="hljs-built_in">exec</span> containerOri bash<br><span class="hljs-comment"># 进入的是root账户，在这个容器中已经存在了一个叫ubuntu的用户</span><br><span class="hljs-comment"># 修改密码</span><br>passwd root<br>passwd ubuntu<br><span class="hljs-comment"># 安装ssh</span><br>apt install ssh<br></code></pre></td></tr></table></figure></li></ul></li><li><p>在宿主机上做端口转发</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs bash">  <span class="hljs-comment"># 查看本机ip 192.168.3.171</span><br>  ifconfig<br>  <span class="hljs-comment"># 查看容器ip  10.19.231.69</span><br>  sudo lxc list<br>  <span class="hljs-comment"># 60601是我们定的端口号，通过宿主机的60601端口号监听容器中22端口号（SSH默认端口号</span><br>  sudo lxc config device add <span class="hljs-built_in">test</span> proxy0 proxy listen=tcp:192.168.3.171:60601 connect=tcp:10.19.231.69:22 <span class="hljs-built_in">bind</span>=host<br>  sudo lxc config device add containerOri proxy0 proxy listen=tcp:192.168.3.171:60601 connect=tcp:10.19.231.69:22 <span class="hljs-built_in">bind</span>=host<br>  <span class="hljs-comment"># 删除代理</span><br>  sudo lxc config device remove  containerOri proxy1<br>  <span class="hljs-comment"># 测试ssh连接容器</span><br>  ssh ubuntu@192.168.3.171 -p 60601<br>  -------- 使用iptables --------- 有问题<br>  <span class="hljs-comment"># 开放端口 60601</span><br>  sudo iptables -I INPUT -p tcp --dport 60601 -j ACCEPT<br>  <span class="hljs-comment"># 做端口转发 其中Hostip为宿主机的ip，Hostport为宿主机的端口号，Containerip为容器的ip</span><br>  <span class="hljs-comment"># iptables –t nat –A PREROUTING –d Hostip –p tcp –dport Hostport –j DNAT –to Containerip:22</span><br>sudo iptables -t nat -A PREROUTING -d 192.168.3.171 -p tcp --dport 60605 -j DNAT --to 10.19.231.192:22<br>sudo iptables -t nat -A PREROUTING -d 192.168.3.171 -p tcp --dport 60615 -j DNAT --to 10.19.231.192:3389<br><span class="hljs-comment"># 保存规则</span><br>sudo sh -c <span class="hljs-string">&quot;iptables-save &gt; /etc/iptables.rules&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>为容器添加显卡</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">  <span class="hljs-comment"># 添加所有显卡</span><br>  sudo lxc config device add containerOri gpu gpu<br>  <span class="hljs-comment"># 添加指定GPU</span><br>sudo lxc config device add yourContainerName gpu0 gpu id=0<br></code></pre></td></tr></table></figure></li><li><p>创建共享目录</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">  <span class="hljs-comment"># 创建共享文件夹</span><br>  <span class="hljs-comment"># 其中 path 为容器路径，source 为宿主机路径。device-name 随意取名字即可。</span><br>  sudo lxc config <span class="hljs-built_in">set</span> &lt;container&gt; security.privileged <span class="hljs-literal">true</span><br>  sudo lxc config device add &lt;container&gt; &lt;device-name&gt; disk path=/home/xxx/share <span class="hljs-built_in">source</span>=/home/xxx/share<br>  <span class="hljs-comment"># 移除</span><br>sudo lxc config device remove &lt;container&gt; &lt;device-name&gt;<br></code></pre></td></tr></table></figure></li><li><p>安装桌面环境、xrdp</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bash">  sudo apt install --no-install-recommends ubuntu-desktop<br>  sudo apt-get install xrdp<br>  <span class="hljs-comment"># 为xrdp添加端口转发</span><br>sudo lxc config device add containerOri proxy1 proxy listen=tcp:192.168.3.171:60611 connect=tcp:10.19.231.69:3389 <span class="hljs-built_in">bind</span>=host<br>  <br></code></pre></td></tr></table></figure></li></ul><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><ol><li><p>复制容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc cp ljh new<br></code></pre></td></tr></table></figure></li><li><p>端口转发</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo iptables -t nat -A PREROUTING -d 192.168.3.171 -p tcp --dport 60605 -j DNAT --to 10.19.231.192:22<br>sudo iptables -t nat -A PREROUTING -d 192.168.3.171 -p tcp --dport 60615 -j DNAT --to 10.19.231.192:3389<br><span class="hljs-comment"># 保存规则</span><br>sudo sh -c <span class="hljs-string">&quot;iptables-save &gt; /etc/iptables.rules&quot;</span><br></code></pre></td></tr></table></figure></li><li><p>查看规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo iptables -t nat -nL --line<br></code></pre></td></tr></table></figure></li><li><p>删除规则</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo iptables -t nat -D PREROUTING 1<br></code></pre></td></tr></table></figure></li><li><p>删除容器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo lxc delete container-name<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>实验室文档</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>MMDET的安装和使用</title>
    <link href="/2021/03/17/MMDET%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
    <url>/2021/03/17/MMDET%E7%9A%84%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h3 id="一、链接"><a href="#一、链接" class="headerlink" title="一、链接"></a>一、链接</h3><h4 id="GIthub地址"><a href="#GIthub地址" class="headerlink" title="GIthub地址"></a><a href="https://github.com/open-mmlab/mmdetection">GIthub地址</a></h4><h4 id="文档地址"><a href="#文档地址" class="headerlink" title="文档地址"></a><a href="https://mmdetection.readthedocs.io/">文档地址</a></h4><hr><h3 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h3><h4 id="环境依赖"><a href="#环境依赖" class="headerlink" title="环境依赖"></a>环境依赖</h4><ul><li><p>Linux 或者macOS系统</p></li><li><p>Python 3.6+</p></li><li><p>PyTorch 1.3+</p></li><li><p>GCC 5+</p></li><li><p>mmcv（商汤的一个cv库）</p></li></ul><h4 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h4><ul><li><ol><li><p>创建conda环境并激活</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n open-mmlab python=3.7 -y<br>conda activate open-mmlab<br></code></pre></td></tr></table></figure></li></ol></li><li><ol start="2"><li>安装PyTorch和Torchvision，参考<a href="https://pytorch.org/get-started/locally/">pytorch官网</a>和cuda版本安装，示例:</li></ol><ul><li><p>方法一<br>conda 或者 pip 在线安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda install pytorch torchvision cudatoolkit=10.1 -c pytorch<br></code></pre></td></tr></table></figure></li><li><p>方法二<br>通过<a href="https://download.pytorch.org/whl/torch_stable.html">torch 离线镜像网址</a>下载whl后 pip离线安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">pip install torchvision-0.8.1+cu110-cp37-cp37m-linux_x86_64.whl<br>pip install torch-1.7.0+cu110-cp37-cp37m-linux_x86_64.whl<br></code></pre></td></tr></table></figure></li></ul></li><li><ol start="3"><li>安装mmcv(1.2)</li></ol><ul><li><p>方法一</p><p>直接安装</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">eg</span>:<br><span class="hljs-attribute">pip</span> install mmcv-full === <span class="hljs-number">1</span>.<span class="hljs-number">0</span>.<span class="hljs-number">5</span><br></code></pre></td></tr></table></figure></li><li><p>方法二</p><p>根据pytorch、cuda，见下表：</p><table class="docutils">  <tbody>    <tr><th width="80"> CUDA </th><th valign="bottom" align="left" width="100">torch 1.6</th><th valign="bottom" align="left" width="100">torch 1.5</th><th valign="bottom" align="left" width="100">torch 1.4</th><th valign="bottom" align="left" width="100">torch 1.3</th></tr>    <tr>      <td align="left">10.2</td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.6.0+cu102 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.5.0+cu102 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"> </td>      <td align="left"> </td>    </tr>    <tr>      <td align="left">10.1</td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.6.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.5.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.4.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.3.0+cu101 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>    </tr>    <tr>      <td align="left">9.2</td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.6.0+cu92 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.5.0+cu92 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.4.0+cu92 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.3.0+cu92 -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>    </tr>    <tr>      <td align="left">cpu</td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.6.0+cpu -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code> pip install mmcv-full==latest+torch1.5.0+cpu -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.4.0+cpu -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>      <td align="left"><details><summary> install </summary><pre><code>pip install mmcv-full==latest+torch1.3.0+cpu -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html</code></pre> </details> </td>    </tr>  </tbody></table></li></ul></li></ul><pre><code>运行如下指令下载<figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">pip</span> install mmcv-full==latest+torch<span class="hljs-number">1</span>.<span class="hljs-number">6</span>.<span class="hljs-number">0</span>+cu<span class="hljs-number">101</span> -f https://openmmlab.oss-accelerate.aliyuncs.com/mmcv/dist/index.html<br></code></pre></td></tr></table></figure>Tips：若不在表中，可尝试魔改命令下载<figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">pip install mmcv-full==latest+torch1.<span class="hljs-number">4.0</span>+cu100 -f https:<span class="hljs-regexp">//</span>openmmlab.oss-accelerate.aliyuncs.com<span class="hljs-regexp">/mmcv/</span>dist/index.html<br>pip install mmcv-full -f https:<span class="hljs-regexp">//</span>download.openmmlab.com<span class="hljs-regexp">/mmcv/</span>dist<span class="hljs-regexp">/cu110/</span>torch1.<span class="hljs-number">7.0</span>/index.html<br>pip install mmcv-full==<span class="hljs-number">1.2</span> -f https:<span class="hljs-regexp">//</span>download.openmmlab.com<span class="hljs-regexp">/mmcv/</span>dist<span class="hljs-regexp">/cu100/</span>torch1.<span class="hljs-number">4.0</span>/index.html<br></code></pre></td></tr></table></figure></code></pre><ul><li><p>方法三</p><p>git 下载mmcv(2.6)源码后，通过git checkout命令修改版本，然后编译mmcv</p></li><li><ol start="4"><li><p>在home的用户目录创建MMD父目录并克隆mmdetection存储库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> /home/USER<br>mkdir MMDET<br>git <span class="hljs-built_in">clone</span> https://github.com/open-mmlab/mmdetection.git<br><span class="hljs-comment"># 换一个镜像比较快</span><br>git <span class="hljs-built_in">clone</span> https://github.com.cnpmjs.org/open-mmlab/mmdetection.git<br><span class="hljs-built_in">cd</span> mmdetection<br><span class="hljs-comment"># 用git checkout 更换版本（github的tags）,考虑2.6</span><br>git checkout bd3306f<br><span class="hljs-comment"># 查看是否更换成功</span><br>cat mmdet/version.py<br><span class="hljs-comment"># 安装</span><br>pip install -r requirements/build.txt<br>pip install -v -e .  <span class="hljs-comment"># 或  python setup.py develop</span><br></code></pre></td></tr></table></figure></li></ol></li></ul><ul><li><ol start="5"><li><p>测试是否安装成功</p><p>可以直接运行demo文件，查看输出是不是报缺少参数的错误</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">python ./demo/image_demo.py<br></code></pre></td></tr></table></figure><p>报错：</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql"><span class="hljs-keyword">usage</span>: image_demo.py [-h] [<span class="hljs-comment">--device DEVICE] [--score-thr SCORE_THR]</span><br>                     img config <span class="hljs-keyword">checkpoint</span><br>image_demo.py: error: the <span class="hljs-keyword">following</span> arguments are required: img, config, <span class="hljs-keyword">checkpoint</span><br></code></pre></td></tr></table></figure><p>也可以通过下载checkpoint并且指定配置文件，其中checkpoin可以在github的<a href="https://github.com/open-mmlab/mmdetection/blob/master/docs/model_zoo.md">model zoo</a>里面下载，然后选择对应的模型，例如<a href="http://download.openmmlab.com/mmdetection/v2.0/faster_rcnn/faster_rcnn_r50_fpn_1x_coco/faster_rcnn_r50_fpn_1x_coco_20200130-047c8118.pth">faster RCNN</a>，下载后保存到本地</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> mmdet.apis <span class="hljs-keyword">import</span> init_detector, inference_detector, show_result_pyplot<br><span class="hljs-keyword">import</span> mmcv<br>config_file = <span class="hljs-string">&#x27;../configs/faster_rcnn/faster_rcnn_r50_fpn_1x_coco.py&#x27;</span><br><span class="hljs-comment"># download the checkpoint from model zoo and put it in `checkpoints/`</span><br>checkpoint_file = <span class="hljs-string">&#x27;../checkpoints/faster_rcnn_r50_fpn_1x_20181010-3d1b3351.pth&#x27;</span><br><span class="hljs-comment"># build the model from a config file and a checkpoint file</span><br>model = init_detector(config_file, checkpoint_file, device=<span class="hljs-string">&#x27;cuda:0&#x27;</span>)<br><span class="hljs-comment"># test a single image</span><br>img = <span class="hljs-string">&#x27;demo.jpg&#x27;</span><br>result = inference_detector(model, img)<br><span class="hljs-comment"># show the results</span><br>show_result_pyplot(model, img, result)<br></code></pre></td></tr></table></figure></li></ol></li></ul><h3 id="三、使用"><a href="#三、使用" class="headerlink" title="三、使用"></a>三、使用</h3><h4 id="使用labelme标注数据（待补充）"><a href="#使用labelme标注数据（待补充）" class="headerlink" title="使用labelme标注数据（待补充）"></a>使用labelme标注数据（待补充）</h4><ul><li>下载后，在终端输入labelme即可使用</li></ul><h4 id="转换成COCO数据集"><a href="#转换成COCO数据集" class="headerlink" title="转换成COCO数据集"></a>转换成COCO数据集</h4><ul><li><p>使用脚本convert2coco.py将labelme的标准文件转换成coco格式，该脚本接受参数如下所示：</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">python</span> convert2coco.<span class="hljs-keyword">py</span> --<span class="hljs-keyword">lp</span> path/<span class="hljs-keyword">to</span>/labemefile --<span class="hljs-keyword">sp</span> path/<span class="hljs-keyword">to</span>/savepath<br># --<span class="hljs-keyword">lp</span> 后面是labelme标注好的<br># --<span class="hljs-keyword">sp</span> 后面是保存coco格式的数据的地址<br></code></pre></td></tr></table></figure></li></ul><h4 id="配置文件设置"><a href="#配置文件设置" class="headerlink" title="配置文件设置"></a>配置文件设置</h4><ol><li><p>新建一个task_config文件夹，里面放置配置文件</p></li><li><p>在task_config文件夹里新建_base_文件夹，workdir文件夹</p></li><li><p>在mmdet/configs里面选择相应的模型，例如faster_rcnn，将faster_rcnn_r50_fpn_1x_coco.py复制到task_config文件夹下</p></li><li><p>在mmdet/configs/_base_文件夹下，找到datasets/coco_detection.py，default_runtime.py，models/fast_rcnn_r50_fpn.py，schedules/schedule_1x.py。最终目录如下所示</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs stylus">├── _base_<br>│   ├── datasets<br>│   │   └── coco_detection.py<br>│   ├── default_runtime.py<br>│   ├── models<br>│   │   └── faster_rcnn_r50_fpn.py<br>│   └── schedules<br>│       └── schedule_1x.py<br>├── faster_rcnn_r50_fpn_1x_coco.py<br>└── workdir<br></code></pre></td></tr></table></figure></li><li><p>修改faster_rcnn_r50_fpn_1x_coco.py，将所有../改成./</p></li><li><p>修改coco_detection.py</p><ul><li><p>Line2: data_root 修改成训练数据的coco地址</p></li><li><p>加入一行class种类</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs vim"><span class="hljs-keyword">e</span><span class="hljs-variable">g:</span><br>classes = (<span class="hljs-string">&#x27;normal&#x27;</span>,<span class="hljs-string">&#x27;unmormal&#x27;</span>)<br></code></pre></td></tr></table></figure></li><li><p>修改data字典，加入classes属性，如下所示</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python">data = <span class="hljs-built_in">dict</span>(<br>    samples_per_gpu=<span class="hljs-number">1</span>,<br>    workers_per_gpu=<span class="hljs-number">1</span>,<br>    train=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=dataset_type,<br>        classes=classes,<br>        ann_file=data_root + <span class="hljs-string">&#x27;annotations/instances_train2017.json&#x27;</span>,<br>        img_prefix=data_root + <span class="hljs-string">&#x27;train2017/&#x27;</span>,<br>        pipeline=train_pipeline),<br>    val=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=dataset_type,<br>        classes=classes,<br>        ann_file=data_root + <span class="hljs-string">&#x27;annotations/instances_val2017.json&#x27;</span>,<br>        img_prefix=data_root + <span class="hljs-string">&#x27;val2017/&#x27;</span>,<br>        pipeline=test_pipeline),<br>    test=<span class="hljs-built_in">dict</span>(<br>        <span class="hljs-built_in">type</span>=dataset_type,<br>        classes=classes,<br>        ann_file=data_root + <span class="hljs-string">&#x27;annotations/instances_val2017.json&#x27;</span>,<br>        img_prefix=data_root + <span class="hljs-string">&#x27;val2017/&#x27;</span>,<br>        pipeline=test_pipeline))<br></code></pre></td></tr></table></figure></li><li><p>data字典的各个路径查看是否匹配</p></li></ul></li><li><p>修改faster_rcnn_r50_fpn.py</p><ul><li><p>如果已经有faster RCNN的预训练模型，可以把pretrained=’torchvision://resnet50’注释掉</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># pretrained=&#x27;torchvision://resnet50&#x27;,</span><br></code></pre></td></tr></table></figure></li><li><p>修改46行的num_classes为需要识别的种类数目，不包括背景，一类就是1</p></li></ul></li><li><p>修改schedule_1x.py</p><ul><li>考虑修改lr和totla_epochs，lr可以考虑修改成0.002</li></ul></li><li><p>修改default_runtime.py</p><ul><li>如果有fater RCNN预训练模型，可以把load_from修改成checkpoint的路径</li></ul></li><li><p>训练</p><ul><li><p>进入mmdet目录 设置config文件路径 和 workdir路径</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span> mmdet<br>python tools/train.py ~/PPAI_test_M/ppai_config/faster_rcnn_r50_fpn_1x_coco.py --work-dir ~/PPAI_test_M/ppai_config/workdir/<br></code></pre></td></tr></table></figure></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs plain">    <br></code></pre></td></tr></table></figure></li><li></li></ol><h4 id="训练"><a href="#训练" class="headerlink" title="训练"></a>训练</h4><h4 id="推理"><a href="#推理" class="headerlink" title="推理"></a>推理</h4>]]></content>
    
    
    
    <tags>
      
      <tag>实验室文档</tag>
      
      <tag>MMDET安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cuda cudnn torch的配置</title>
    <link href="/2021/03/17/cuda-cudnn-torch%E7%9A%84%E9%85%8D%E7%BD%AE/"/>
    <url>/2021/03/17/cuda-cudnn-torch%E7%9A%84%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<ol><li>安装cuda</li></ol><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo sh cuda_10.0.130_410.48_linux.run<br><span class="hljs-comment"># 按z快进</span><br><span class="hljs-comment"># 选项</span><br>Do you accept the previously <span class="hljs-built_in">read</span> EULA?<br>accept/decline/quit: accept<br>Install NVIDIA Accelerated Graphics Driver <span class="hljs-keyword">for</span> Linux-x86_64 410.48?<br>(y)es/(n)o/(q)uit: n<br><br>Install the CUDA 10.0 Toolkit?<br>(y)es/(n)o/(q)uit: y<br><br>Enter Toolkit Location<br> [ default is /usr/<span class="hljs-built_in">local</span>/cuda-10.0 ]:<br><br>Do you want to install a symbolic link at /usr/<span class="hljs-built_in">local</span>/cuda?<br>(y)es/(n)o/(q)uit: y<br><br>Install the CUDA 10.0 Samples?<br>(y)es/(n)o/(q)uit: y<br><br>Enter CUDA Samples Location<br> [ default is /home/hycx ]:<br></code></pre></td></tr></table></figure></li><li><p>添加环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo vim ~/.bashrc<br><span class="hljs-comment"># 在最下面插入</span><br><span class="hljs-comment"># cuda env</span><br><span class="hljs-built_in">export</span> CUDA_HOME=/usr/<span class="hljs-built_in">local</span>/cuda<br><span class="hljs-built_in">export</span> PATH=<span class="hljs-variable">$PATH</span>:<span class="hljs-variable">$CUDA_HOME</span>/bin<br><span class="hljs-built_in">export</span> LD_LIBRARY_PATH=/usr/<span class="hljs-built_in">local</span>/cuda/lib64<span class="hljs-variable">$&#123;LD_LIBRARY_PATH:+:<span class="hljs-variable">$&#123;LD_LIBRARY_PATH&#125;</span>&#125;</span><br><br><span class="hljs-comment"># 保存并激活环境</span><br><span class="hljs-built_in">source</span> ~/.bashrc<br><br><span class="hljs-comment"># 检查是否安装成功</span><br>nvcc -V<br><span class="hljs-comment"># 输出</span><br>nvcc: NVIDIA (R) Cuda compiler driver<br>Copyright (c) 2005-2018 NVIDIA Corporation<br>Built on Sat_Aug_25_21:08:01_CDT_2018<br>Cuda compilation tools, release 10.0, V10.0.130<br></code></pre></td></tr></table></figure></li></ul><ol start="2"><li><p>安装cudnn</p><ul><li><p>解压cudnn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">tar zxvf cudnn-10.0-linux-x64-v7.6.5.32.tgz<br></code></pre></td></tr></table></figure></li><li><p>将文件放入cuda文件夹</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">sudo cp cuda/include/cudnn.h /usr/<span class="hljs-built_in">local</span>/cuda/include/ <br>sudo cp cuda/lib64/libcudnn* /usr/<span class="hljs-built_in">local</span>/cuda/lib64/ <br>sudo chmod a+r /usr/<span class="hljs-built_in">local</span>/cuda/include/cudnn.h <br>sudo chmod a+r /usr/<span class="hljs-built_in">local</span>/cuda/lib64/libcudnn*<br></code></pre></td></tr></table></figure></li><li><p>查看cudnn版本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs bash">cat /usr/<span class="hljs-built_in">local</span>/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2<br><span class="hljs-comment"># 出现以下信息</span><br><br><br><span class="hljs-comment">#define CUDNN_MAJOR 7</span><br><span class="hljs-comment">#define CUDNN_MINOR 6</span><br><span class="hljs-comment">#define CUDNN_PATCHLEVEL 5</span><br>--<br><span class="hljs-comment">#define CUDNN_VERSION (CUDNN_MAJOR * 1000 + CUDNN_MINOR * 100 + CUDNN_PATCHLEVEL)</span><br><br><span class="hljs-comment">#include &quot;driver_types.h&quot;</span><br></code></pre></td></tr></table></figure></li></ul></li><li><p>安装conda</p><ul><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">sh ./Miniconda3-latest-Linux-x86_64.sh<br><span class="hljs-comment"># init选择yes</span><br>by running conda init? [yes|no]<br>[no] &gt;&gt;&gt; yes<br><span class="hljs-comment"># 重启终端查看是否安装成功</span><br>conda env list<br></code></pre></td></tr></table></figure></li><li><p>换源（参考<a href="https://mirrors.tuna.tsinghua.edu.cn/help/anaconda/">清华源</a>）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 生成config文件</span><br>conda config --<span class="hljs-built_in">set</span> show_channel_urls yes<br><span class="hljs-comment"># 修改 .condarc文件</span><br>vim ~/.condarc<br><span class="hljs-comment"># 内容修改为以下内容</span><br>channels:<br>  - defaults<br>show_channel_urls: <span class="hljs-literal">true</span><br>default_channels:<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r<br>  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2<br>custom_channels:<br>  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud<br>  <span class="hljs-comment"># 清除索引缓存，保证用的是镜像站提供的索引</span><br>  conda clean -i <br></code></pre></td></tr></table></figure></li><li><p>创建新环境</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 创建torch的python 3.7环境</span><br>conda create -n torch_1.4 python==3.7<br><span class="hljs-comment"># 激活环境</span><br></code></pre></td></tr></table></figure></li><li><p>更改pip源为豆瓣源</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 升级 pip 到最新的版本 (&gt;=10.0.0) 后进行配置：</span><br>pip install pip -U<br>pip config <span class="hljs-built_in">set</span> global.index-url https://pypi.doubanio.com/simple<br></code></pre></td></tr></table></figure></li></ul></li><li><p>安装torch和torchvision</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 离线下载后本地安装</span><br>pip install torch-1.4.0+cu100-cp37-cp37m-linux_x86_64.whl<br>pip install torchvision-0.5.0+cu100-cp37-cp37m-linux_x86_64.whl<br><span class="hljs-comment"># 检查是否成功</span><br>(torch_1.4) hycx@hycx:~/下载$ python<br>Python 3.7.0 (default, Oct  9 2018, 10:31:47)<br>[GCC 7.3.0] :: Anaconda, Inc. on linux<br>Type <span class="hljs-string">&quot;help&quot;</span>, <span class="hljs-string">&quot;copyright&quot;</span>, <span class="hljs-string">&quot;credits&quot;</span> or <span class="hljs-string">&quot;license&quot;</span> <span class="hljs-keyword">for</span> more information.<br>&gt;&gt;&gt; import torch<br>&gt;&gt;&gt; torch.cuda.is_available()<br>True<br>&gt;&gt;&gt; <span class="hljs-built_in">exit</span>()<br></code></pre></td></tr></table></figure></li><li><p>克隆一个环境到mmdet</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">conda create -n mmdet_2.6 --<span class="hljs-built_in">clone</span> torch_1.4<br></code></pre></td></tr></table></figure></li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>实验室文档</tag>
      
      <tag>MMDET安装</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
